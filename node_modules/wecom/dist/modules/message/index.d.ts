import { Wecom, WecomConfig } from "../../wecom";
import { IMessage, IMessageRet } from "./interface/index";
import { AxiosResponse } from "axios";
export declare class Message extends Wecom {
    constructor(config: Partial<WecomConfig>);
    /**
     * @description
     * @param {(IMessage.Text
     *       | IMessage.Image
     *       | IMessage.Voice
     *       | IMessage.File
     *       | IMessage.TextCard
     *       | IMessage.News
     *       | IMessage.MPNews
     *       | IMessage.Markdown
     *       | IMessage.MiniProgramNotice
     *       | IMessage.TaskCard
     *       | IMessage.TemplateCard.TemplateCardCommon<
     *           | IMessage.TemplateCard.TextNotice
     *           | IMessage.TemplateCard.NewsNotice
     *           | IMessage.TemplateCard.ButtonInteraction
     *           | IMessage.TemplateCard.VoteInteraction
     *           | IMessage.TemplateCard.MultipleInteraction
     *         >)} message
     * @param {number} [agentId]
     * @return {*}  {Promise<AxiosResponse<IMessageRet>>}
     * @memberof Message
     */
    send(message: IMessage.Text | IMessage.Image | IMessage.Voice | IMessage.File | IMessage.TextCard | IMessage.News | IMessage.MPNews | IMessage.Markdown | IMessage.MiniProgramNotice | IMessage.TaskCard | IMessage.TemplateCard.TemplateCardCommon<IMessage.TemplateCard.TextNotice | IMessage.TemplateCard.NewsNotice | IMessage.TemplateCard.ButtonInteraction | IMessage.TemplateCard.VoteInteraction | IMessage.TemplateCard.MultipleInteraction>, agentId?: number): Promise<AxiosResponse<IMessageRet>>;
}
