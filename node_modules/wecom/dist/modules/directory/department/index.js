"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Department = void 0;
var wecom_1 = require("../../../wecom");
var Department = /** @class */ (function (_super) {
    __extends(Department, _super);
    function Department(config) {
        return _super.call(this, config) || this;
    }
    /**
     * @description 创建部门： 使用该接口 您需要去到管理工具中 选择通讯录同步 在权限 中开启 接口调用权限
     * @param {ICreateDepartment} data
     * @return {*}
     * @memberof Department
     */
    Department.prototype.create = function (data) {
        return this.request({
            url: "department/create",
            method: "POST",
            data: data,
        });
    };
    /**
     * @description 修改部门： 使用该接口 您需要去到管理工具中 选择通讯录同步 在权限 中开启 接口调用权限
     * @param {IUpdateDepartment} data
     * @return {*}  {Promise<AxiosResponse<any>>}
     * @memberof Department
     */
    Department.prototype.update = function (data) {
        return this.request({
            url: "department/update",
            method: "POST",
            data: data,
        });
    };
    /**
     * @description 删除部门
     * @param {number} id
     * @return {*}  {Promise<AxiosResponse<any>>}
     * @memberof Department
     */
    Department.prototype.delete = function (id) {
        return this.request({
            url: "department/delete",
            method: "GET",
            params: {
                id: id,
            },
        });
    };
    /**
     * @description 获取部门详情
     * @param {number} [id]
     * @return {*}
     * @memberof Department
     */
    Department.prototype.list = function (id) {
        return this.request({
            url: "department/list",
            method: "GET",
            params: {
                id: id,
            },
        });
    };
    return Department;
}(wecom_1.Wecom));
exports.Department = Department;
