"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tag = void 0;
var wecom_1 = require("../../../wecom");
var Tag = /** @class */ (function (_super) {
    __extends(Tag, _super);
    function Tag(config) {
        return _super.call(this, config) || this;
    }
    /**
     * @description 创建标签
     * @param {(ITagCreateDto | string)} tag
     * @return {*}  {Promise<AxiosResponse<TagCreateRet>>}
     * @memberof Tag
     */
    Tag.prototype.create = function (tag) {
        if (typeof tag === "string") {
            tag = {
                tagname: tag,
            };
        }
        return this.request({
            url: "tag/create",
            method: "POST",
            data: tag,
        });
    };
    /**
     * @description 更新标签名字
     * @param {ITag} tag
     * @return {*}  {Promise<AxiosResponse<BaseRet>>}
     * @memberof Tag
     */
    Tag.prototype.update = function (tag) {
        return this.request({
            url: "tag/update",
            method: "POST",
            data: tag,
        });
    };
    /**
     * @description 删除标签
     * @param {number} tagid
     * @return {*}  {Promise<AxiosResponse<BaseRet>>}
     * @memberof Tag
     */
    Tag.prototype.delete = function (tagid) {
        return this.request({
            url: "tag/delete",
            method: "GET",
            params: {
                tagid: tagid,
            },
        });
    };
    /**
     * @description 获取标签成员
     * @param {number} tagid
     * @return {*}  {Promise<AxiosResponse<TagUserListRet>>}
     * @memberof Tag
     */
    Tag.prototype.get = function (tagid) {
        return this.request({
            url: "tag/get",
            method: "GET",
            params: { tagid: tagid },
        });
    };
    /**
     * @description 增加标签成员
     * @param {ITagUserDto} data
     * @return {*}  {Promise<AxiosResponse<TagUserRet>>}
     * @memberof Tag
     */
    Tag.prototype.addTagUser = function (data) {
        return this.request({
            url: "tag/addtagusers",
            method: "POST",
            data: data,
        });
    };
    /**
     * @description 删除标签成员
     * @param {ITagUserDto} data
     * @return {*}  {Promise<AxiosResponse<TagUserRet>>}
     * @memberof Tag
     */
    Tag.prototype.delTagUser = function (data) {
        return this.request({
            url: "tag/deltagusers",
            method: "POST",
            data: data,
        });
    };
    /**
     * @description 获取标签列表
     * @return {*}  {Promise<AxiosResponse<TagListRet>>}
     * @memberof Tag
     */
    Tag.prototype.list = function () {
        return this.request({
            url: "tag/list",
            method: "GET",
        });
    };
    return Tag;
}(wecom_1.Wecom));
exports.Tag = Tag;
