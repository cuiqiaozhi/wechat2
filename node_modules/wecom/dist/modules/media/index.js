"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Media = void 0;
var wecom_1 = require("../../wecom");
var form_data_1 = __importDefault(require("form-data"));
/**
 * @description 企业微信素材管理
 * @export
 * @class Media
 * @extends {Wecom}
 */
var Media = /** @class */ (function (_super) {
    __extends(Media, _super);
    function Media(config) {
        return _super.call(this, config) || this;
    }
    /**
     * @description 上传文件到企业微信
     * @template T
     * @template R
     * @param {(Buffer | ReadStream)} file
     * @param {IMediaType} [type="file"]
     * @return {*}  {Promise<R>}
     * @memberof Media
     */
    Media.prototype.upload = function (file, type) {
        if (type === void 0) { type = "file"; }
        var form = new form_data_1.default();
        form.append("media", file);
        return this.request({
            url: "media/upload",
            method: "POST",
            params: {
                type: type,
            },
            headers: {
                "Content-Type": "multipart/form-data; boundary=" + form._boundary,
            },
            data: form,
        });
    };
    return Media;
}(wecom_1.Wecom));
exports.Media = Media;
